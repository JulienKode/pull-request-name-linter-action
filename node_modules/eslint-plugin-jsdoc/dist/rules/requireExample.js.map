{"version":3,"sources":["../../src/rules/requireExample.js"],"names":["jsdoc","report","utils","context","avoidDocs","targetTagName","functionExamples","_","filter","tags","tag","length","reportJSDoc","line","push","description","name","optional","type","forEach","example","exampleContent","compact","trim","split","contextDefaults","meta","fixable","schema","additionalProperties","properties","checkConstructors","default","checkGetters","checkSetters","contexts","items","exemptedBy"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAEe,2BAAa,CAAC;AAC3BA,EAAAA,KAD2B;AAE3BC,EAAAA,MAF2B;AAG3BC,EAAAA,KAH2B;AAI3BC,EAAAA;AAJ2B,CAAD,KAKtB;AACJ,oCAAoBA,OAApB,EAA6B,iBAA7B;;AAEA,MAAID,KAAK,CAACE,SAAN,EAAJ,EAAuB;AACrB;AACD;;AAED,QAAMC,aAAa,GAAG,SAAtB;;AAEA,QAAMC,gBAAgB,GAAGC,gBAAEC,MAAF,CAASR,KAAK,CAACS,IAAf,EAAqB;AAC5CC,IAAAA,GAAG,EAAEL;AADuC,GAArB,CAAzB;;AAIA,MAAI,CAACC,gBAAgB,CAACK,MAAtB,EAA8B;AAC5BT,IAAAA,KAAK,CAACU,WAAN,CAAmB,kBAAiBP,aAAc,eAAlD,EAAkE,IAAlE,EAAwE,MAAM;AAC5E,UAAI,CAACL,KAAK,CAACS,IAAX,EAAiB;AACfT,QAAAA,KAAK,CAACS,IAAN,GAAa,EAAb;AACD;;AACD,YAAMI,IAAI,GAAGb,KAAK,CAACS,IAAN,CAAWE,MAAX,GAAoBX,KAAK,CAACS,IAAN,CAAWT,KAAK,CAACS,IAAN,CAAWE,MAAX,GAAoB,CAA/B,EAAkCE,IAAlC,GAAyC,CAA7D,GAAiE,CAA9E;AACAb,MAAAA,KAAK,CAACS,IAAN,CAAWK,IAAX,CAAgB;AACdC,QAAAA,WAAW,EAAE,EADC;AAEdF,QAAAA,IAFc;AAGdG,QAAAA,IAAI,EAAE,EAHQ;AAIdC,QAAAA,QAAQ,EAAE,KAJI;AAKdP,QAAAA,GAAG,EAAEL,aALS;AAMda,QAAAA,IAAI,EAAE;AANQ,OAAhB;AAQD,KAbD;AAeA;AACD;;AAEDZ,EAAAA,gBAAgB,CAACa,OAAjB,CAA0BC,OAAD,IAAa;AACpC,UAAMC,cAAc,GAAGd,gBAAEe,OAAF,CAAW,GAAEF,OAAO,CAACJ,IAAK,IAAGI,OAAO,CAACL,WAAY,EAAvC,CAAyCQ,IAAzC,GAAgDC,KAAhD,CAAsD,IAAtD,CAAV,CAAvB;;AAEA,QAAI,CAACH,cAAc,CAACV,MAApB,EAA4B;AAC1BV,MAAAA,MAAM,CAAE,kBAAiBI,aAAc,eAAjC,CAAN;AACD;AACF,GAND;AAOD,CA5Cc,EA4CZ;AACDoB,EAAAA,eAAe,EAAE,IADhB;AAEDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,oBAAoB,EAAE,KADxB;AAEEC,MAAAA,UAAU,EAAE;AACVC,QAAAA,iBAAiB,EAAE;AACjBC,UAAAA,OAAO,EAAE,IADQ;AAEjBd,UAAAA,IAAI,EAAE;AAFW,SADT;AAKVe,QAAAA,YAAY,EAAE;AACZD,UAAAA,OAAO,EAAE,KADG;AAEZd,UAAAA,IAAI,EAAE;AAFM,SALJ;AASVgB,QAAAA,YAAY,EAAE;AACZF,UAAAA,OAAO,EAAE,KADG;AAEZd,UAAAA,IAAI,EAAE;AAFM,SATJ;AAaViB,QAAAA,QAAQ,EAAE;AACRC,UAAAA,KAAK,EAAE;AACLlB,YAAAA,IAAI,EAAE;AADD,WADC;AAIRA,UAAAA,IAAI,EAAE;AAJE,SAbA;AAmBVmB,QAAAA,UAAU,EAAE;AACVD,UAAAA,KAAK,EAAE;AACLlB,YAAAA,IAAI,EAAE;AADD,WADG;AAIVA,UAAAA,IAAI,EAAE;AAJI;AAnBF,OAFd;AA4BEA,MAAAA,IAAI,EAAE;AA5BR,KADM,CAFJ;AAkCJA,IAAAA,IAAI,EAAE;AAlCF;AAFL,CA5CY,C","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\nimport warnRemovedSettings from '../warnRemovedSettings';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  utils,\n  context,\n}) => {\n  warnRemovedSettings(context, 'require-example');\n\n  if (utils.avoidDocs()) {\n    return;\n  }\n\n  const targetTagName = 'example';\n\n  const functionExamples = _.filter(jsdoc.tags, {\n    tag: targetTagName,\n  });\n\n  if (!functionExamples.length) {\n    utils.reportJSDoc(`Missing JSDoc @${targetTagName} declaration.`, null, () => {\n      if (!jsdoc.tags) {\n        jsdoc.tags = [];\n      }\n      const line = jsdoc.tags.length ? jsdoc.tags[jsdoc.tags.length - 1].line + 1 : 0;\n      jsdoc.tags.push({\n        description: '',\n        line,\n        name: '',\n        optional: false,\n        tag: targetTagName,\n        type: '',\n      });\n    });\n\n    return;\n  }\n\n  functionExamples.forEach((example) => {\n    const exampleContent = _.compact(`${example.name} ${example.description}`.trim().split('\\n'));\n\n    if (!exampleContent.length) {\n      report(`Missing JSDoc @${targetTagName} description.`);\n    }\n  });\n}, {\n  contextDefaults: true,\n  meta: {\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          checkConstructors: {\n            default: true,\n            type: 'boolean',\n          },\n          checkGetters: {\n            default: false,\n            type: 'boolean',\n          },\n          checkSetters: {\n            default: false,\n            type: 'boolean',\n          },\n          contexts: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n          exemptedBy: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"requireExample.js"}